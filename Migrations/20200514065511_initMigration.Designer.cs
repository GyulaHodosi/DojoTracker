// <auto-generated />
using System;
using DojoTracker.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DojoTracker.Migrations
{
    [DbContext(typeof(DojoTrackerDbContext))]
    [Migration("20200514065511_initMigration")]
    partial class initMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DojoTracker.Models.Dojo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dojos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Difficulty = 1,
                            Title = "String Calculator",
                            Url = "https://osherove.com/tdd-kata-1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Difficulty = 2,
                            Title = "Bank OCR",
                            Url = "http://codingdojo.org/kata/BankOCR/"
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            Difficulty = 1,
                            Title = "SOLID: S",
                            Url = "https://github.com/CodecoolGlobal/solid-kata"
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            Difficulty = 1,
                            Title = "SOLID: O",
                            Url = "https://github.com/CodecoolGlobal/solid-kata"
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            Difficulty = 1,
                            Title = "SOLID: L",
                            Url = "https://github.com/CodecoolGlobal/solid-kata"
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            Difficulty = 1,
                            Title = "SOLID: I",
                            Url = "https://github.com/CodecoolGlobal/solid-kata"
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            Difficulty = 1,
                            Title = "SOLID: D",
                            Url = "https://github.com/CodecoolGlobal/solid-kata"
                        },
                        new
                        {
                            Id = 8,
                            Description = "",
                            Difficulty = 1,
                            Title = "Pattern: State",
                            Url = "https://www.codewars.com/kata/5682e72eb7354b2f39000021"
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            Difficulty = 1,
                            Title = "Pattern: Strategy",
                            Url = "https://www.codewars.com/kata/patterncraft-strategy"
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            Difficulty = 1,
                            Title = "Pattern: Visitor",
                            Url = "https://www.codewars.com/kata/patterncraft-visitor"
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            Difficulty = 1,
                            Title = "Pattern: Decorator",
                            Url = "https://www.codewars.com/kata/patterncraft-decorator"
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            Difficulty = 2,
                            Title = "Pattern: Adapter",
                            Url = "https://www.codewars.com/kata/patterncraft-adapter"
                        },
                        new
                        {
                            Id = 13,
                            Description = "",
                            Difficulty = 2,
                            Title = "Pattern: Command",
                            Url = "https://www.codewars.com/kata/patterncraft-command"
                        },
                        new
                        {
                            Id = 14,
                            Description = "",
                            Difficulty = 2,
                            Title = "Pattern: Observer",
                            Url = "https://www.tutorialspoint.com/design_pattern/observer_pattern.htm"
                        },
                        new
                        {
                            Id = 15,
                            Description = "",
                            Difficulty = 2,
                            Title = "Pattern: Proxy",
                            Url = "https://www.tutorialspoint.com/design_pattern/proxy_pattern.htm"
                        },
                        new
                        {
                            Id = 16,
                            Description = "",
                            Difficulty = 3,
                            Title = "Pattern: Chain of Responsibility",
                            Url = "https://www.tutorialspoint.com/design_pattern/chain_of_responsibility_pattern.htm"
                        },
                        new
                        {
                            Id = 17,
                            Description = "",
                            Difficulty = 1,
                            Title = "Warmup: Sock Merchant",
                            Url = "https://www.hackerrank.com/challenges/sock-merchant/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=warmup"
                        },
                        new
                        {
                            Id = 18,
                            Description = "",
                            Difficulty = 1,
                            Title = "Warmup: Counting Valleys",
                            Url = "https://www.hackerrank.com/challenges/counting-valleys/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=warmup"
                        },
                        new
                        {
                            Id = 19,
                            Description = "",
                            Difficulty = 1,
                            Title = "Warmup: Jumping on theClouds",
                            Url = "https://www.hackerrank.com/challenges/jumping-on-the-clouds/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=warmup"
                        },
                        new
                        {
                            Id = 20,
                            Description = "",
                            Difficulty = 1,
                            Title = "Warmup: Repeated String",
                            Url = "https://www.hackerrank.com/challenges/repeated-string/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=warmup"
                        },
                        new
                        {
                            Id = 21,
                            Description = "",
                            Difficulty = 1,
                            Title = "Arrays: Left Rotation",
                            Url = "https://www.hackerrank.com/challenges/ctci-array-left-rotation/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=arrays"
                        },
                        new
                        {
                            Id = 22,
                            Description = "",
                            Difficulty = 2,
                            Title = "Arrays: New Year Chaos",
                            Url = "https://www.hackerrank.com/challenges/new-year-chaos/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=arrays"
                        },
                        new
                        {
                            Id = 23,
                            Description = "",
                            Difficulty = 2,
                            Title = "Arrays: Minimum Swaps 2",
                            Url = "https://www.hackerrank.com/challenges/minimum-swaps-2/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=arrays"
                        },
                        new
                        {
                            Id = 24,
                            Description = "",
                            Difficulty = 1,
                            Title = "Dictionaries: Two Strings",
                            Url = "https://www.hackerrank.com/challenges/two-strings/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=dictionaries-hashmaps"
                        },
                        new
                        {
                            Id = 25,
                            Description = "",
                            Difficulty = 2,
                            Title = "Dictionaries: Sherlock and Anagrams",
                            Url = "https://www.hackerrank.com/challenges/sherlock-and-anagrams/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=dictionaries-hashmaps"
                        },
                        new
                        {
                            Id = 26,
                            Description = "",
                            Difficulty = 2,
                            Title = "Dictionaries: Count Triplets",
                            Url = "https://www.hackerrank.com/challenges/count-triplets-1/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=dictionaries-hashmaps"
                        },
                        new
                        {
                            Id = 27,
                            Description = "",
                            Difficulty = 2,
                            Title = "Dictionaries: Frequency Queries",
                            Url = "https://www.hackerrank.com/challenges/frequency-queries/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=dictionaries-hashmaps"
                        },
                        new
                        {
                            Id = 28,
                            Description = "",
                            Difficulty = 1,
                            Title = "Sorting: Bubble Sort",
                            Url = "https://www.hackerrank.com/challenges/ctci-bubble-sort/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=sorting"
                        },
                        new
                        {
                            Id = 29,
                            Description = "",
                            Difficulty = 2,
                            Title = "Sorting: Comparator",
                            Url = "https://www.hackerrank.com/challenges/ctci-comparator-sorting/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=sorting"
                        },
                        new
                        {
                            Id = 30,
                            Description = "",
                            Difficulty = 2,
                            Title = "Sorting: Fraudulent Activity Notifications",
                            Url = "https://www.hackerrank.com/challenges/fraudulent-activity-notifications/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=sorting"
                        },
                        new
                        {
                            Id = 31,
                            Description = "",
                            Difficulty = 1,
                            Title = "Sorting: Making Anagrams",
                            Url = "https://www.hackerrank.com/challenges/ctci-making-anagrams/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=strings"
                        },
                        new
                        {
                            Id = 32,
                            Description = "",
                            Difficulty = 2,
                            Title = "String: Sherlock and the Valid String",
                            Url = "https://www.hackerrank.com/challenges/sherlock-and-valid-string/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=strings"
                        },
                        new
                        {
                            Id = 33,
                            Description = "",
                            Difficulty = 2,
                            Title = "String: Special String Again",
                            Url = "https://www.hackerrank.com/challenges/special-palindrome-again/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=strings"
                        },
                        new
                        {
                            Id = 34,
                            Description = "",
                            Difficulty = 2,
                            Title = "String: Common Child",
                            Url = "https://www.hackerrank.com/challenges/common-child/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=strings"
                        },
                        new
                        {
                            Id = 35,
                            Description = "",
                            Difficulty = 1,
                            Title = "Greedy Algorithms: Minimum Absolute Difference in an Array",
                            Url = "https://www.hackerrank.com/challenges/minimum-absolute-difference-in-an-array/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=greedy-algorithms"
                        },
                        new
                        {
                            Id = 36,
                            Description = "",
                            Difficulty = 2,
                            Title = "Greedy Algorithms: Greedy Florist",
                            Url = "https://www.hackerrank.com/challenges/greedy-florist/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=greedy-algorithms"
                        },
                        new
                        {
                            Id = 37,
                            Description = "",
                            Difficulty = 2,
                            Title = "Greedy Algorithms: Max Min",
                            Url = "https://www.hackerrank.com/challenges/angry-children/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=greedy-algorithms"
                        },
                        new
                        {
                            Id = 38,
                            Description = "",
                            Difficulty = 2,
                            Title = "Search: Ice Cream Parlor",
                            Url = "https://www.hackerrank.com/challenges/ctci-ice-cream-parlor/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=search"
                        },
                        new
                        {
                            Id = 39,
                            Description = "",
                            Difficulty = 2,
                            Title = "Search: Swap Nodes",
                            Url = "https://www.hackerrank.com/challenges/swap-nodes-algo/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=search"
                        },
                        new
                        {
                            Id = 40,
                            Description = "",
                            Difficulty = 2,
                            Title = "Search: Pairs",
                            Url = "https://www.hackerrank.com/challenges/pairs/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=search"
                        },
                        new
                        {
                            Id = 41,
                            Description = "",
                            Difficulty = 2,
                            Title = "Search: Triple Sum",
                            Url = "https://www.hackerrank.com/challenges/triple-sum/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=search"
                        },
                        new
                        {
                            Id = 42,
                            Description = "",
                            Difficulty = 2,
                            Title = "Search: Minimum Time Required",
                            Url = "https://www.hackerrank.com/challenges/minimum-time-required/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=search"
                        },
                        new
                        {
                            Id = 43,
                            Description = "",
                            Difficulty = 2,
                            Title = "Dynamic Programming: Abbreviation",
                            Url = "https://www.hackerrank.com/challenges/abbr/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=dynamic-programming"
                        },
                        new
                        {
                            Id = 44,
                            Description = "",
                            Difficulty = 2,
                            Title = "Dynamic Programming: Max Array Sum",
                            Url = "https://www.hackerrank.com/challenges/max-array-sum/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=dynamic-programming"
                        },
                        new
                        {
                            Id = 45,
                            Description = "",
                            Difficulty = 2,
                            Title = "Dynamic Programming: Candies",
                            Url = "https://www.hackerrank.com/challenges/candies/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=dynamic-programming"
                        },
                        new
                        {
                            Id = 46,
                            Description = "",
                            Difficulty = 2,
                            Title = "Stacks and Queues: Balanced Brackets",
                            Url = "https://www.hackerrank.com/challenges/balanced-brackets/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=stacks-queues"
                        },
                        new
                        {
                            Id = 47,
                            Description = "",
                            Difficulty = 2,
                            Title = "Stacks and Queues: A Tale of Two Stacks",
                            Url = "https://www.hackerrank.com/challenges/ctci-queue-using-two-stacks/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=stacks-queues"
                        },
                        new
                        {
                            Id = 48,
                            Description = "",
                            Difficulty = 2,
                            Title = "Stacks and Queues: Largest Rectangle",
                            Url = "https://www.hackerrank.com/challenges/largest-rectangle/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=stacks-queues"
                        },
                        new
                        {
                            Id = 49,
                            Description = "",
                            Difficulty = 2,
                            Title = "Stacks and Queues: Min Max Riddle",
                            Url = "https://www.hackerrank.com/challenges/min-max-riddle/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=stacks-queues"
                        },
                        new
                        {
                            Id = 50,
                            Description = "",
                            Difficulty = 2,
                            Title = "Stacks and Queues: Castle on the Grid",
                            Url = "https://www.hackerrank.com/challenges/castle-on-the-grid/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=stacks-queues"
                        },
                        new
                        {
                            Id = 51,
                            Description = "",
                            Difficulty = 2,
                            Title = "Graphs: Roads and Libraries",
                            Url = "https://www.hackerrank.com/challenges/torque-and-development/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=graphs"
                        },
                        new
                        {
                            Id = 52,
                            Description = "",
                            Difficulty = 2,
                            Title = "Graphs: Find the Nearest Clone",
                            Url = "https://www.hackerrank.com/challenges/find-the-nearest-clone/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=graphs"
                        },
                        new
                        {
                            Id = 53,
                            Description = "",
                            Difficulty = 1,
                            Title = "Trees: Height of Binary Tree",
                            Url = "https://www.hackerrank.com/challenges/tree-height-of-a-binary-tree/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=trees"
                        },
                        new
                        {
                            Id = 54,
                            Description = "",
                            Difficulty = 1,
                            Title = "Trees: Lowest Common Ancestor",
                            Url = "https://www.hackerrank.com/challenges/binary-search-tree-lowest-common-ancestor/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=trees"
                        },
                        new
                        {
                            Id = 55,
                            Description = "",
                            Difficulty = 2,
                            Title = "Trees: Is This A Binary Search Tree?",
                            Url = "https://www.hackerrank.com/challenges/ctci-is-binary-search-tree/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=trees"
                        },
                        new
                        {
                            Id = 56,
                            Description = "",
                            Difficulty = 2,
                            Title = "Trees: Huffman Decoding",
                            Url = "https://www.hackerrank.com/challenges/tree-huffman-decoding/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=trees"
                        },
                        new
                        {
                            Id = 57,
                            Description = "",
                            Difficulty = 1,
                            Title = "Linked List: Insert a Node at a Specific Position",
                            Url = "https://www.hackerrank.com/challenges/insert-a-node-at-a-specific-position-in-a-linked-list/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=linked-lists"
                        },
                        new
                        {
                            Id = 58,
                            Description = "",
                            Difficulty = 1,
                            Title = "Linked List: Inserting a Node Into a Sorted Doubly Linked List",
                            Url = "https://www.hackerrank.com/challenges/insert-a-node-into-a-sorted-doubly-linked-list/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=linked-lists"
                        },
                        new
                        {
                            Id = 59,
                            Description = "",
                            Difficulty = 1,
                            Title = "Linked List: Reverse a Doubly Linked List",
                            Url = "https://www.hackerrank.com/challenges/reverse-a-doubly-linked-list/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=linked-lists"
                        },
                        new
                        {
                            Id = 60,
                            Description = "",
                            Difficulty = 1,
                            Title = "Linked List: Find Merge Point of Two Lists",
                            Url = "https://www.hackerrank.com/challenges/find-the-merge-point-of-two-joined-linked-lists/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=linked-lists"
                        },
                        new
                        {
                            Id = 61,
                            Description = "",
                            Difficulty = 1,
                            Title = "Linked List: Detect a Cycle",
                            Url = "https://www.hackerrank.com/challenges/ctci-linked-list-cycle/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=linked-lists"
                        },
                        new
                        {
                            Id = 62,
                            Description = "",
                            Difficulty = 1,
                            Title = "Recursion: Fibonacci Numbers",
                            Url = "https://www.hackerrank.com/challenges/ctci-fibonacci-numbers/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=recursion-backtracking"
                        },
                        new
                        {
                            Id = 63,
                            Description = "",
                            Difficulty = 2,
                            Title = "Recursion: Davis' Staircase",
                            Url = "https://www.hackerrank.com/challenges/ctci-recursive-staircase/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=recursion-backtracking"
                        },
                        new
                        {
                            Id = 64,
                            Description = "",
                            Difficulty = 2,
                            Title = "Recursion: Crossword Puzzle",
                            Url = "https://www.hackerrank.com/challenges/crossword-puzzle/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=recursion-backtracking"
                        },
                        new
                        {
                            Id = 65,
                            Description = "",
                            Difficulty = 2,
                            Title = "Recursion: Digit Sum",
                            Url = "https://www.hackerrank.com/challenges/recursive-digit-sum/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=recursion-backtracking"
                        },
                        new
                        {
                            Id = 66,
                            Description = "",
                            Difficulty = 1,
                            Title = "FizzBuzz",
                            Url = "http://codingdojo.org/kata/FizzBuzz"
                        });
                });

            modelBuilder.Entity("DojoTracker.Models.Solution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DojoId")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Solutions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("DojoTracker.Models.User", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GoogleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("avatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
